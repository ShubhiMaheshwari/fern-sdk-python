# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class RefundsEntityRefundStatus(str, enum.Enum):
    """
    This can be one of ["SUCCESS", "PENDING", "CANCELLED", "ONHOLD", "FAILED"]
    """

    SUCCESS = "SUCCESS"
    PENDING = "PENDING"
    CANCELLED = "CANCELLED"
    ONHOLD = "ONHOLD"

    def visit(
        self,
        success: typing.Callable[[], T_Result],
        pending: typing.Callable[[], T_Result],
        cancelled: typing.Callable[[], T_Result],
        onhold: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is RefundsEntityRefundStatus.SUCCESS:
            return success()
        if self is RefundsEntityRefundStatus.PENDING:
            return pending()
        if self is RefundsEntityRefundStatus.CANCELLED:
            return cancelled()
        if self is RefundsEntityRefundStatus.ONHOLD:
            return onhold()
