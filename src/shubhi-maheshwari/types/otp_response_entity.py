# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .otp_response_entity_action import OtpResponseEntityAction
from .otp_response_entity_authenticate_status import OtpResponseEntityAuthenticateStatus


class OtpResponseEntity(pydantic.BaseModel):
    """
    This is the response shared when merchant inovkes the OTP submit or resend API
    """

    cf_payment_id: typing.Optional[float] = pydantic.Field(
        description=("The payment id for which this request was sent\n")
    )
    action: typing.Optional[OtpResponseEntityAction] = pydantic.Field(
        description=("The action that was invoked for this request.\n")
    )
    authenticate_status: typing.Optional[OtpResponseEntityAuthenticateStatus] = pydantic.Field(
        description=(
            "Status of the is action. Will be either failed or successful. If the action is successful, you should still call the authorization status to verify the final payment status.\n"
        )
    )
    payment_message: typing.Optional[str] = pydantic.Field(
        description=("Human readable message which describes the status in more detail\n")
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
