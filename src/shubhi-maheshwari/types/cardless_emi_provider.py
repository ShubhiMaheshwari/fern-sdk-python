# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class CardlessEmiProvider(str, enum.Enum):
    """
    One of [`flexmoney`, `zestmoney`, `hdfc`, `icici`, `cashe`, `idfc`, `kotak`]
    """

    FLEXMONEY = "flexmoney"
    ZESTMONEY = "zestmoney"
    HDFC = "hdfc"
    ICICI = "icici"
    CASHE = "cashe"
    IDFC = "idfc"
    KOTAK = "kotak"

    def visit(
        self,
        flexmoney: typing.Callable[[], T_Result],
        zestmoney: typing.Callable[[], T_Result],
        hdfc: typing.Callable[[], T_Result],
        icici: typing.Callable[[], T_Result],
        cashe: typing.Callable[[], T_Result],
        idfc: typing.Callable[[], T_Result],
        kotak: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is CardlessEmiProvider.FLEXMONEY:
            return flexmoney()
        if self is CardlessEmiProvider.ZESTMONEY:
            return zestmoney()
        if self is CardlessEmiProvider.HDFC:
            return hdfc()
        if self is CardlessEmiProvider.ICICI:
            return icici()
        if self is CardlessEmiProvider.CASHE:
            return cashe()
        if self is CardlessEmiProvider.IDFC:
            return idfc()
        if self is CardlessEmiProvider.KOTAK:
            return kotak()
