# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class VendorSplit(pydantic.BaseModel):
    vendor_id: typing.Optional[str] = pydantic.Field(description=("Vendor id created in Cashfree system\n"))
    amount: typing.Optional[float] = pydantic.Field(description=("Amount which will be associated with this vendor\n"))
    percentage: typing.Optional[float] = pydantic.Field(
        description=("Percentage of order amount which shall get added to vendor account\n")
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
