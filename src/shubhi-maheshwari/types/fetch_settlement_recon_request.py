# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .fetch_settlement_recon_request_filters import FetchSettlementReconRequestFilters
from .fetch_settlement_recon_request_pagination import FetchSettlementReconRequestPagination


class FetchSettlementReconRequest(pydantic.BaseModel):
    pagination: FetchSettlementReconRequestPagination = pydantic.Field(
        description=(
            "To fetch the next set of settlements, pass the cursor received in the response to the next API call. \n"
            " To receive the data for the first time, pass the cursor as null. \n"
            " Limit would be number of settlements that you want to receive.\n"
        )
    )
    filters: FetchSettlementReconRequestFilters = pydantic.Field(
        description=(
            "Specify either the Settlement ID, Settlement UTR, or start date and end date to fetch the settlement details.\n"
        )
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
