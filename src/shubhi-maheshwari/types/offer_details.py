# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .cashback_details import CashbackDetails
from .discount_details import DiscountDetails
from .offer_details_offer_type import OfferDetailsOfferType


class OfferDetails(pydantic.BaseModel):
    offer_type: OfferDetailsOfferType = pydantic.Field(description=("Offer Type for the Offer.\n"))
    discount_details: typing.Optional[DiscountDetails]
    cashback_details: typing.Optional[CashbackDetails]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
