# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class UpiAuthorizeDetails(pydantic.BaseModel):
    approve_by: typing.Optional[str] = pydantic.Field(
        description=("Time by which this authorization should be approved by the customer.\n")
    )
    start_time: typing.Optional[str] = pydantic.Field(
        description=("This is the time when the UPI one time mandate will start\n")
    )
    end_time: typing.Optional[str] = pydantic.Field(
        description=(
            "This is the time when the UPI mandate will be over. If the mandate has not been executed by this time, the funds will be returned back to the customer after this time.\n"
        )
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
