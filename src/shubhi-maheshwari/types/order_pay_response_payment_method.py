# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class OrderPayResponsePaymentMethod(str, enum.Enum):
    """
    One of ["upi", "netbanking", "card", "app", "cardless_emi", "paylater"]
    """

    NETBANKING = "netbanking"
    CARD = "card"
    UPI = "upi"
    APP = "app"
    CARDLESS_EMI = "cardless_emi"
    PAYLATER = "paylater"

    def visit(
        self,
        netbanking: typing.Callable[[], T_Result],
        card: typing.Callable[[], T_Result],
        upi: typing.Callable[[], T_Result],
        app: typing.Callable[[], T_Result],
        cardless_emi: typing.Callable[[], T_Result],
        paylater: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is OrderPayResponsePaymentMethod.NETBANKING:
            return netbanking()
        if self is OrderPayResponsePaymentMethod.CARD:
            return card()
        if self is OrderPayResponsePaymentMethod.UPI:
            return upi()
        if self is OrderPayResponsePaymentMethod.APP:
            return app()
        if self is OrderPayResponsePaymentMethod.CARDLESS_EMI:
            return cardless_emi()
        if self is OrderPayResponsePaymentMethod.PAYLATER:
            return paylater()
