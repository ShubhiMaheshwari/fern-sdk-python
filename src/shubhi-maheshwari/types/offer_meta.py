# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class OfferMeta(pydantic.BaseModel):
    offer_title: str = pydantic.Field(
        description=('Title for the Offer. <span style="white-space: nowrap">`<= 50 characters`</span> \n')
    )
    offer_description: str = pydantic.Field(
        description=('Description for the Offer. <span style="white-space: nowrap">`<= 100 characters`</span> \n')
    )
    offer_code: str = pydantic.Field(
        description=('Unique identifier for the Offer. <span style="white-space: nowrap">`<= 10 characters`</span> \n')
    )
    offer_start_time: str = pydantic.Field(
        description=('Start Time for the Offer <span style="white-space: nowrap">`<= 20 characters`</span> \n')
    )
    offer_end_time: str = pydantic.Field(description=("Expiry Time for the Offer\n"))

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
